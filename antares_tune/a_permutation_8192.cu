// GLOBALS: input0:float16[8192, 8192] -> output0:float16[512, 512, 16, 16]
// BACKEND: c-cuda (default)
// CONFIG: {"F___output0:D0": [-1, 2, 8, 2], "F___output0:D1": [-1, 2, 2, 8], "F___output0:O": [0, 1], "F___output0:S": 1, "F___output0:R": 0}
// COMPUTE_V1: - einstein_v2("output0[M / 16, N / 16, M % 16, N % 16] =. input0[M, N]", input_dict={"input0": {"dtype": "float16", "shape": [8192, 8192]}, "output0": {"dtype": "float16", "shape": [512, 512, 16, 16]}})


// ---------------------------------------------------------------------------
// LOCAL: template_op_kernel0 -- input0:float16[8192, 8192] -> output0:float16[512, 512, 16, 16]

#include <cuda_runtime.h>
#include <cuda_fp16.h>
#include <mma.h>

#ifndef __CUDA_COMMON_MACRO__
#define __CUDA_COMMON_MACRO__

#if (__CUDA_ARCH__ >= 600)
__forceinline__ __device__ __half hmax(const __half &a, const __half &b) { return a > b ? a : b; }
__forceinline__ __device__ __half hmin(const __half &a, const __half &b) { return a < b ? a : b; }
#endif

#endif


extern "C" __global__ __launch_bounds__(16) void template_op_kernel0(half* __restrict__ input0, half* __restrict__ output0) {
  // [thread_extent] blockIdx.x = 256
  // [thread_extent] threadIdx.x = 8
  // [thread_extent] blockIdx.y = 256
  // [thread_extent] threadIdx.y = 2
  ((output0[(((((((int)blockIdx.y) * 262144) + (((int)blockIdx.x) * 512)) + (((int)threadIdx.y) * 128)) + (((int)threadIdx.x) * 2)))]) = (input0[(((((((int)blockIdx.y) * 262144) + (((int)threadIdx.y) * 65536)) + (((int)blockIdx.x) * 32)) + (((int)threadIdx.x) * 2)))]));
  ((output0[((((((((int)blockIdx.y) * 262144) + (((int)blockIdx.x) * 512)) + (((int)threadIdx.y) * 128)) + (((int)threadIdx.x) * 2)) + 1))]) = (input0[((((((((int)blockIdx.y) * 262144) + (((int)threadIdx.y) * 65536)) + (((int)blockIdx.x) * 32)) + (((int)threadIdx.x) * 2)) + 1))]));
  ((output0[((((((((int)blockIdx.y) * 262144) + (((int)blockIdx.x) * 512)) + (((int)threadIdx.y) * 128)) + (((int)threadIdx.x) * 2)) + 256))]) = (input0[((((((((int)blockIdx.y) * 262144) + (((int)threadIdx.y) * 65536)) + (((int)blockIdx.x) * 32)) + (((int)threadIdx.x) * 2)) + 16))]));
  ((output0[((((((((int)blockIdx.y) * 262144) + (((int)blockIdx.x) * 512)) + (((int)threadIdx.y) * 128)) + (((int)threadIdx.x) * 2)) + 257))]) = (input0[((((((((int)blockIdx.y) * 262144) + (((int)threadIdx.y) * 65536)) + (((int)blockIdx.x) * 32)) + (((int)threadIdx.x) * 2)) + 17))]));
  ((output0[((((((((int)blockIdx.y) * 262144) + (((int)blockIdx.x) * 512)) + (((int)threadIdx.y) * 128)) + (((int)threadIdx.x) * 2)) + 16))]) = (input0[((((((((int)blockIdx.y) * 262144) + (((int)threadIdx.y) * 65536)) + (((int)blockIdx.x) * 32)) + (((int)threadIdx.x) * 2)) + 8192))]));
  ((output0[((((((((int)blockIdx.y) * 262144) + (((int)blockIdx.x) * 512)) + (((int)threadIdx.y) * 128)) + (((int)threadIdx.x) * 2)) + 17))]) = (input0[((((((((int)blockIdx.y) * 262144) + (((int)threadIdx.y) * 65536)) + (((int)blockIdx.x) * 32)) + (((int)threadIdx.x) * 2)) + 8193))]));
  ((output0[((((((((int)blockIdx.y) * 262144) + (((int)blockIdx.x) * 512)) + (((int)threadIdx.y) * 128)) + (((int)threadIdx.x) * 2)) + 272))]) = (input0[((((((((int)blockIdx.y) * 262144) + (((int)threadIdx.y) * 65536)) + (((int)blockIdx.x) * 32)) + (((int)threadIdx.x) * 2)) + 8208))]));
  ((output0[((((((((int)blockIdx.y) * 262144) + (((int)blockIdx.x) * 512)) + (((int)threadIdx.y) * 128)) + (((int)threadIdx.x) * 2)) + 273))]) = (input0[((((((((int)blockIdx.y) * 262144) + (((int)threadIdx.y) * 65536)) + (((int)blockIdx.x) * 32)) + (((int)threadIdx.x) * 2)) + 8209))]));
  ((output0[((((((((int)blockIdx.y) * 262144) + (((int)blockIdx.x) * 512)) + (((int)threadIdx.y) * 128)) + (((int)threadIdx.x) * 2)) + 32))]) = (input0[((((((((int)blockIdx.y) * 262144) + (((int)threadIdx.y) * 65536)) + (((int)blockIdx.x) * 32)) + (((int)threadIdx.x) * 2)) + 16384))]));
  ((output0[((((((((int)blockIdx.y) * 262144) + (((int)blockIdx.x) * 512)) + (((int)threadIdx.y) * 128)) + (((int)threadIdx.x) * 2)) + 33))]) = (input0[((((((((int)blockIdx.y) * 262144) + (((int)threadIdx.y) * 65536)) + (((int)blockIdx.x) * 32)) + (((int)threadIdx.x) * 2)) + 16385))]));
  ((output0[((((((((int)blockIdx.y) * 262144) + (((int)blockIdx.x) * 512)) + (((int)threadIdx.y) * 128)) + (((int)threadIdx.x) * 2)) + 288))]) = (input0[((((((((int)blockIdx.y) * 262144) + (((int)threadIdx.y) * 65536)) + (((int)blockIdx.x) * 32)) + (((int)threadIdx.x) * 2)) + 16400))]));
  ((output0[((((((((int)blockIdx.y) * 262144) + (((int)blockIdx.x) * 512)) + (((int)threadIdx.y) * 128)) + (((int)threadIdx.x) * 2)) + 289))]) = (input0[((((((((int)blockIdx.y) * 262144) + (((int)threadIdx.y) * 65536)) + (((int)blockIdx.x) * 32)) + (((int)threadIdx.x) * 2)) + 16401))]));
  ((output0[((((((((int)blockIdx.y) * 262144) + (((int)blockIdx.x) * 512)) + (((int)threadIdx.y) * 128)) + (((int)threadIdx.x) * 2)) + 48))]) = (input0[((((((((int)blockIdx.y) * 262144) + (((int)threadIdx.y) * 65536)) + (((int)blockIdx.x) * 32)) + (((int)threadIdx.x) * 2)) + 24576))]));
  ((output0[((((((((int)blockIdx.y) * 262144) + (((int)blockIdx.x) * 512)) + (((int)threadIdx.y) * 128)) + (((int)threadIdx.x) * 2)) + 49))]) = (input0[((((((((int)blockIdx.y) * 262144) + (((int)threadIdx.y) * 65536)) + (((int)blockIdx.x) * 32)) + (((int)threadIdx.x) * 2)) + 24577))]));
  ((output0[((((((((int)blockIdx.y) * 262144) + (((int)blockIdx.x) * 512)) + (((int)threadIdx.y) * 128)) + (((int)threadIdx.x) * 2)) + 304))]) = (input0[((((((((int)blockIdx.y) * 262144) + (((int)threadIdx.y) * 65536)) + (((int)blockIdx.x) * 32)) + (((int)threadIdx.x) * 2)) + 24592))]));
  ((output0[((((((((int)blockIdx.y) * 262144) + (((int)blockIdx.x) * 512)) + (((int)threadIdx.y) * 128)) + (((int)threadIdx.x) * 2)) + 305))]) = (input0[((((((((int)blockIdx.y) * 262144) + (((int)threadIdx.y) * 65536)) + (((int)blockIdx.x) * 32)) + (((int)threadIdx.x) * 2)) + 24593))]));
  ((output0[((((((((int)blockIdx.y) * 262144) + (((int)blockIdx.x) * 512)) + (((int)threadIdx.y) * 128)) + (((int)threadIdx.x) * 2)) + 64))]) = (input0[((((((((int)blockIdx.y) * 262144) + (((int)threadIdx.y) * 65536)) + (((int)blockIdx.x) * 32)) + (((int)threadIdx.x) * 2)) + 32768))]));
  ((output0[((((((((int)blockIdx.y) * 262144) + (((int)blockIdx.x) * 512)) + (((int)threadIdx.y) * 128)) + (((int)threadIdx.x) * 2)) + 65))]) = (input0[((((((((int)blockIdx.y) * 262144) + (((int)threadIdx.y) * 65536)) + (((int)blockIdx.x) * 32)) + (((int)threadIdx.x) * 2)) + 32769))]));
  ((output0[((((((((int)blockIdx.y) * 262144) + (((int)blockIdx.x) * 512)) + (((int)threadIdx.y) * 128)) + (((int)threadIdx.x) * 2)) + 320))]) = (input0[((((((((int)blockIdx.y) * 262144) + (((int)threadIdx.y) * 65536)) + (((int)blockIdx.x) * 32)) + (((int)threadIdx.x) * 2)) + 32784))]));
  ((output0[((((((((int)blockIdx.y) * 262144) + (((int)blockIdx.x) * 512)) + (((int)threadIdx.y) * 128)) + (((int)threadIdx.x) * 2)) + 321))]) = (input0[((((((((int)blockIdx.y) * 262144) + (((int)threadIdx.y) * 65536)) + (((int)blockIdx.x) * 32)) + (((int)threadIdx.x) * 2)) + 32785))]));
  ((output0[((((((((int)blockIdx.y) * 262144) + (((int)blockIdx.x) * 512)) + (((int)threadIdx.y) * 128)) + (((int)threadIdx.x) * 2)) + 80))]) = (input0[((((((((int)blockIdx.y) * 262144) + (((int)threadIdx.y) * 65536)) + (((int)blockIdx.x) * 32)) + (((int)threadIdx.x) * 2)) + 40960))]));
  ((output0[((((((((int)blockIdx.y) * 262144) + (((int)blockIdx.x) * 512)) + (((int)threadIdx.y) * 128)) + (((int)threadIdx.x) * 2)) + 81))]) = (input0[((((((((int)blockIdx.y) * 262144) + (((int)threadIdx.y) * 65536)) + (((int)blockIdx.x) * 32)) + (((int)threadIdx.x) * 2)) + 40961))]));
  ((output0[((((((((int)blockIdx.y) * 262144) + (((int)blockIdx.x) * 512)) + (((int)threadIdx.y) * 128)) + (((int)threadIdx.x) * 2)) + 336))]) = (input0[((((((((int)blockIdx.y) * 262144) + (((int)threadIdx.y) * 65536)) + (((int)blockIdx.x) * 32)) + (((int)threadIdx.x) * 2)) + 40976))]));
  ((output0[((((((((int)blockIdx.y) * 262144) + (((int)blockIdx.x) * 512)) + (((int)threadIdx.y) * 128)) + (((int)threadIdx.x) * 2)) + 337))]) = (input0[((((((((int)blockIdx.y) * 262144) + (((int)threadIdx.y) * 65536)) + (((int)blockIdx.x) * 32)) + (((int)threadIdx.x) * 2)) + 40977))]));
  ((output0[((((((((int)blockIdx.y) * 262144) + (((int)blockIdx.x) * 512)) + (((int)threadIdx.y) * 128)) + (((int)threadIdx.x) * 2)) + 96))]) = (input0[((((((((int)blockIdx.y) * 262144) + (((int)threadIdx.y) * 65536)) + (((int)blockIdx.x) * 32)) + (((int)threadIdx.x) * 2)) + 49152))]));
  ((output0[((((((((int)blockIdx.y) * 262144) + (((int)blockIdx.x) * 512)) + (((int)threadIdx.y) * 128)) + (((int)threadIdx.x) * 2)) + 97))]) = (input0[((((((((int)blockIdx.y) * 262144) + (((int)threadIdx.y) * 65536)) + (((int)blockIdx.x) * 32)) + (((int)threadIdx.x) * 2)) + 49153))]));
  ((output0[((((((((int)blockIdx.y) * 262144) + (((int)blockIdx.x) * 512)) + (((int)threadIdx.y) * 128)) + (((int)threadIdx.x) * 2)) + 352))]) = (input0[((((((((int)blockIdx.y) * 262144) + (((int)threadIdx.y) * 65536)) + (((int)blockIdx.x) * 32)) + (((int)threadIdx.x) * 2)) + 49168))]));
  ((output0[((((((((int)blockIdx.y) * 262144) + (((int)blockIdx.x) * 512)) + (((int)threadIdx.y) * 128)) + (((int)threadIdx.x) * 2)) + 353))]) = (input0[((((((((int)blockIdx.y) * 262144) + (((int)threadIdx.y) * 65536)) + (((int)blockIdx.x) * 32)) + (((int)threadIdx.x) * 2)) + 49169))]));
  ((output0[((((((((int)blockIdx.y) * 262144) + (((int)blockIdx.x) * 512)) + (((int)threadIdx.y) * 128)) + (((int)threadIdx.x) * 2)) + 112))]) = (input0[((((((((int)blockIdx.y) * 262144) + (((int)threadIdx.y) * 65536)) + (((int)blockIdx.x) * 32)) + (((int)threadIdx.x) * 2)) + 57344))]));
  ((output0[((((((((int)blockIdx.y) * 262144) + (((int)blockIdx.x) * 512)) + (((int)threadIdx.y) * 128)) + (((int)threadIdx.x) * 2)) + 113))]) = (input0[((((((((int)blockIdx.y) * 262144) + (((int)threadIdx.y) * 65536)) + (((int)blockIdx.x) * 32)) + (((int)threadIdx.x) * 2)) + 57345))]));
  ((output0[((((((((int)blockIdx.y) * 262144) + (((int)blockIdx.x) * 512)) + (((int)threadIdx.y) * 128)) + (((int)threadIdx.x) * 2)) + 368))]) = (input0[((((((((int)blockIdx.y) * 262144) + (((int)threadIdx.y) * 65536)) + (((int)blockIdx.x) * 32)) + (((int)threadIdx.x) * 2)) + 57360))]));
  ((output0[((((((((int)blockIdx.y) * 262144) + (((int)blockIdx.x) * 512)) + (((int)threadIdx.y) * 128)) + (((int)threadIdx.x) * 2)) + 369))]) = (input0[((((((((int)blockIdx.y) * 262144) + (((int)threadIdx.y) * 65536)) + (((int)blockIdx.x) * 32)) + (((int)threadIdx.x) * 2)) + 57361))]));
  ((output0[((((((((int)blockIdx.y) * 262144) + (((int)blockIdx.x) * 512)) + (((int)threadIdx.y) * 128)) + (((int)threadIdx.x) * 2)) + 131072))]) = (input0[((((((((int)blockIdx.y) * 262144) + (((int)threadIdx.y) * 65536)) + (((int)blockIdx.x) * 32)) + (((int)threadIdx.x) * 2)) + 131072))]));
  ((output0[((((((((int)blockIdx.y) * 262144) + (((int)blockIdx.x) * 512)) + (((int)threadIdx.y) * 128)) + (((int)threadIdx.x) * 2)) + 131073))]) = (input0[((((((((int)blockIdx.y) * 262144) + (((int)threadIdx.y) * 65536)) + (((int)blockIdx.x) * 32)) + (((int)threadIdx.x) * 2)) + 131073))]));
  ((output0[((((((((int)blockIdx.y) * 262144) + (((int)blockIdx.x) * 512)) + (((int)threadIdx.y) * 128)) + (((int)threadIdx.x) * 2)) + 131328))]) = (input0[((((((((int)blockIdx.y) * 262144) + (((int)threadIdx.y) * 65536)) + (((int)blockIdx.x) * 32)) + (((int)threadIdx.x) * 2)) + 131088))]));
  ((output0[((((((((int)blockIdx.y) * 262144) + (((int)blockIdx.x) * 512)) + (((int)threadIdx.y) * 128)) + (((int)threadIdx.x) * 2)) + 131329))]) = (input0[((((((((int)blockIdx.y) * 262144) + (((int)threadIdx.y) * 65536)) + (((int)blockIdx.x) * 32)) + (((int)threadIdx.x) * 2)) + 131089))]));
  ((output0[((((((((int)blockIdx.y) * 262144) + (((int)blockIdx.x) * 512)) + (((int)threadIdx.y) * 128)) + (((int)threadIdx.x) * 2)) + 131088))]) = (input0[((((((((int)blockIdx.y) * 262144) + (((int)threadIdx.y) * 65536)) + (((int)blockIdx.x) * 32)) + (((int)threadIdx.x) * 2)) + 139264))]));
  ((output0[((((((((int)blockIdx.y) * 262144) + (((int)blockIdx.x) * 512)) + (((int)threadIdx.y) * 128)) + (((int)threadIdx.x) * 2)) + 131089))]) = (input0[((((((((int)blockIdx.y) * 262144) + (((int)threadIdx.y) * 65536)) + (((int)blockIdx.x) * 32)) + (((int)threadIdx.x) * 2)) + 139265))]));
  ((output0[((((((((int)blockIdx.y) * 262144) + (((int)blockIdx.x) * 512)) + (((int)threadIdx.y) * 128)) + (((int)threadIdx.x) * 2)) + 131344))]) = (input0[((((((((int)blockIdx.y) * 262144) + (((int)threadIdx.y) * 65536)) + (((int)blockIdx.x) * 32)) + (((int)threadIdx.x) * 2)) + 139280))]));
  ((output0[((((((((int)blockIdx.y) * 262144) + (((int)blockIdx.x) * 512)) + (((int)threadIdx.y) * 128)) + (((int)threadIdx.x) * 2)) + 131345))]) = (input0[((((((((int)blockIdx.y) * 262144) + (((int)threadIdx.y) * 65536)) + (((int)blockIdx.x) * 32)) + (((int)threadIdx.x) * 2)) + 139281))]));
  ((output0[((((((((int)blockIdx.y) * 262144) + (((int)blockIdx.x) * 512)) + (((int)threadIdx.y) * 128)) + (((int)threadIdx.x) * 2)) + 131104))]) = (input0[((((((((int)blockIdx.y) * 262144) + (((int)threadIdx.y) * 65536)) + (((int)blockIdx.x) * 32)) + (((int)threadIdx.x) * 2)) + 147456))]));
  ((output0[((((((((int)blockIdx.y) * 262144) + (((int)blockIdx.x) * 512)) + (((int)threadIdx.y) * 128)) + (((int)threadIdx.x) * 2)) + 131105))]) = (input0[((((((((int)blockIdx.y) * 262144) + (((int)threadIdx.y) * 65536)) + (((int)blockIdx.x) * 32)) + (((int)threadIdx.x) * 2)) + 147457))]));
  ((output0[((((((((int)blockIdx.y) * 262144) + (((int)blockIdx.x) * 512)) + (((int)threadIdx.y) * 128)) + (((int)threadIdx.x) * 2)) + 131360))]) = (input0[((((((((int)blockIdx.y) * 262144) + (((int)threadIdx.y) * 65536)) + (((int)blockIdx.x) * 32)) + (((int)threadIdx.x) * 2)) + 147472))]));
  ((output0[((((((((int)blockIdx.y) * 262144) + (((int)blockIdx.x) * 512)) + (((int)threadIdx.y) * 128)) + (((int)threadIdx.x) * 2)) + 131361))]) = (input0[((((((((int)blockIdx.y) * 262144) + (((int)threadIdx.y) * 65536)) + (((int)blockIdx.x) * 32)) + (((int)threadIdx.x) * 2)) + 147473))]));
  ((output0[((((((((int)blockIdx.y) * 262144) + (((int)blockIdx.x) * 512)) + (((int)threadIdx.y) * 128)) + (((int)threadIdx.x) * 2)) + 131120))]) = (input0[((((((((int)blockIdx.y) * 262144) + (((int)threadIdx.y) * 65536)) + (((int)blockIdx.x) * 32)) + (((int)threadIdx.x) * 2)) + 155648))]));
  ((output0[((((((((int)blockIdx.y) * 262144) + (((int)blockIdx.x) * 512)) + (((int)threadIdx.y) * 128)) + (((int)threadIdx.x) * 2)) + 131121))]) = (input0[((((((((int)blockIdx.y) * 262144) + (((int)threadIdx.y) * 65536)) + (((int)blockIdx.x) * 32)) + (((int)threadIdx.x) * 2)) + 155649))]));
  ((output0[((((((((int)blockIdx.y) * 262144) + (((int)blockIdx.x) * 512)) + (((int)threadIdx.y) * 128)) + (((int)threadIdx.x) * 2)) + 131376))]) = (input0[((((((((int)blockIdx.y) * 262144) + (((int)threadIdx.y) * 65536)) + (((int)blockIdx.x) * 32)) + (((int)threadIdx.x) * 2)) + 155664))]));
  ((output0[((((((((int)blockIdx.y) * 262144) + (((int)blockIdx.x) * 512)) + (((int)threadIdx.y) * 128)) + (((int)threadIdx.x) * 2)) + 131377))]) = (input0[((((((((int)blockIdx.y) * 262144) + (((int)threadIdx.y) * 65536)) + (((int)blockIdx.x) * 32)) + (((int)threadIdx.x) * 2)) + 155665))]));
  ((output0[((((((((int)blockIdx.y) * 262144) + (((int)blockIdx.x) * 512)) + (((int)threadIdx.y) * 128)) + (((int)threadIdx.x) * 2)) + 131136))]) = (input0[((((((((int)blockIdx.y) * 262144) + (((int)threadIdx.y) * 65536)) + (((int)blockIdx.x) * 32)) + (((int)threadIdx.x) * 2)) + 163840))]));
  ((output0[((((((((int)blockIdx.y) * 262144) + (((int)blockIdx.x) * 512)) + (((int)threadIdx.y) * 128)) + (((int)threadIdx.x) * 2)) + 131137))]) = (input0[((((((((int)blockIdx.y) * 262144) + (((int)threadIdx.y) * 65536)) + (((int)blockIdx.x) * 32)) + (((int)threadIdx.x) * 2)) + 163841))]));
  ((output0[((((((((int)blockIdx.y) * 262144) + (((int)blockIdx.x) * 512)) + (((int)threadIdx.y) * 128)) + (((int)threadIdx.x) * 2)) + 131392))]) = (input0[((((((((int)blockIdx.y) * 262144) + (((int)threadIdx.y) * 65536)) + (((int)blockIdx.x) * 32)) + (((int)threadIdx.x) * 2)) + 163856))]));
  ((output0[((((((((int)blockIdx.y) * 262144) + (((int)blockIdx.x) * 512)) + (((int)threadIdx.y) * 128)) + (((int)threadIdx.x) * 2)) + 131393))]) = (input0[((((((((int)blockIdx.y) * 262144) + (((int)threadIdx.y) * 65536)) + (((int)blockIdx.x) * 32)) + (((int)threadIdx.x) * 2)) + 163857))]));
  ((output0[((((((((int)blockIdx.y) * 262144) + (((int)blockIdx.x) * 512)) + (((int)threadIdx.y) * 128)) + (((int)threadIdx.x) * 2)) + 131152))]) = (input0[((((((((int)blockIdx.y) * 262144) + (((int)threadIdx.y) * 65536)) + (((int)blockIdx.x) * 32)) + (((int)threadIdx.x) * 2)) + 172032))]));
  ((output0[((((((((int)blockIdx.y) * 262144) + (((int)blockIdx.x) * 512)) + (((int)threadIdx.y) * 128)) + (((int)threadIdx.x) * 2)) + 131153))]) = (input0[((((((((int)blockIdx.y) * 262144) + (((int)threadIdx.y) * 65536)) + (((int)blockIdx.x) * 32)) + (((int)threadIdx.x) * 2)) + 172033))]));
  ((output0[((((((((int)blockIdx.y) * 262144) + (((int)blockIdx.x) * 512)) + (((int)threadIdx.y) * 128)) + (((int)threadIdx.x) * 2)) + 131408))]) = (input0[((((((((int)blockIdx.y) * 262144) + (((int)threadIdx.y) * 65536)) + (((int)blockIdx.x) * 32)) + (((int)threadIdx.x) * 2)) + 172048))]));
  ((output0[((((((((int)blockIdx.y) * 262144) + (((int)blockIdx.x) * 512)) + (((int)threadIdx.y) * 128)) + (((int)threadIdx.x) * 2)) + 131409))]) = (input0[((((((((int)blockIdx.y) * 262144) + (((int)threadIdx.y) * 65536)) + (((int)blockIdx.x) * 32)) + (((int)threadIdx.x) * 2)) + 172049))]));
  ((output0[((((((((int)blockIdx.y) * 262144) + (((int)blockIdx.x) * 512)) + (((int)threadIdx.y) * 128)) + (((int)threadIdx.x) * 2)) + 131168))]) = (input0[((((((((int)blockIdx.y) * 262144) + (((int)threadIdx.y) * 65536)) + (((int)blockIdx.x) * 32)) + (((int)threadIdx.x) * 2)) + 180224))]));
  ((output0[((((((((int)blockIdx.y) * 262144) + (((int)blockIdx.x) * 512)) + (((int)threadIdx.y) * 128)) + (((int)threadIdx.x) * 2)) + 131169))]) = (input0[((((((((int)blockIdx.y) * 262144) + (((int)threadIdx.y) * 65536)) + (((int)blockIdx.x) * 32)) + (((int)threadIdx.x) * 2)) + 180225))]));
  ((output0[((((((((int)blockIdx.y) * 262144) + (((int)blockIdx.x) * 512)) + (((int)threadIdx.y) * 128)) + (((int)threadIdx.x) * 2)) + 131424))]) = (input0[((((((((int)blockIdx.y) * 262144) + (((int)threadIdx.y) * 65536)) + (((int)blockIdx.x) * 32)) + (((int)threadIdx.x) * 2)) + 180240))]));
  ((output0[((((((((int)blockIdx.y) * 262144) + (((int)blockIdx.x) * 512)) + (((int)threadIdx.y) * 128)) + (((int)threadIdx.x) * 2)) + 131425))]) = (input0[((((((((int)blockIdx.y) * 262144) + (((int)threadIdx.y) * 65536)) + (((int)blockIdx.x) * 32)) + (((int)threadIdx.x) * 2)) + 180241))]));
  ((output0[((((((((int)blockIdx.y) * 262144) + (((int)blockIdx.x) * 512)) + (((int)threadIdx.y) * 128)) + (((int)threadIdx.x) * 2)) + 131184))]) = (input0[((((((((int)blockIdx.y) * 262144) + (((int)threadIdx.y) * 65536)) + (((int)blockIdx.x) * 32)) + (((int)threadIdx.x) * 2)) + 188416))]));
  ((output0[((((((((int)blockIdx.y) * 262144) + (((int)blockIdx.x) * 512)) + (((int)threadIdx.y) * 128)) + (((int)threadIdx.x) * 2)) + 131185))]) = (input0[((((((((int)blockIdx.y) * 262144) + (((int)threadIdx.y) * 65536)) + (((int)blockIdx.x) * 32)) + (((int)threadIdx.x) * 2)) + 188417))]));
  ((output0[((((((((int)blockIdx.y) * 262144) + (((int)blockIdx.x) * 512)) + (((int)threadIdx.y) * 128)) + (((int)threadIdx.x) * 2)) + 131440))]) = (input0[((((((((int)blockIdx.y) * 262144) + (((int)threadIdx.y) * 65536)) + (((int)blockIdx.x) * 32)) + (((int)threadIdx.x) * 2)) + 188432))]));
  ((output0[((((((((int)blockIdx.y) * 262144) + (((int)blockIdx.x) * 512)) + (((int)threadIdx.y) * 128)) + (((int)threadIdx.x) * 2)) + 131441))]) = (input0[((((((((int)blockIdx.y) * 262144) + (((int)threadIdx.y) * 65536)) + (((int)blockIdx.x) * 32)) + (((int)threadIdx.x) * 2)) + 188433))]));
}

// Saved Perf = 3.166700e-04 sec / run; Step Produced = 138; Planned Steps = 1000;