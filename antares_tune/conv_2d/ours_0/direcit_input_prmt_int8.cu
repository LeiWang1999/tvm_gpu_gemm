// GLOBALS: input0:int8[128, 42, 42, 1024] -> output0:int8[8, 42, 42, 24, 16, 16]
// BACKEND: c-cuda (default)
// CONFIG: {"F___output0:D0": [-1, 4, 1, 1], "F___output0:D1": [-1, 2, 1, 1], "F___output0:D2": [-1, 4, 64, 1], "F___output0:D3": [-1, 1], "F___output0:O": [0, 2, 1, 3], "F___output0:S": 2, "F___output0:R": 1}
// COMPUTE_V1: - einstein_v2("output0[H, W, N // 16, C // 16, N % 16, C % 16] =. input0[N, H, W, C]", input_dict={"input0": {"dtype": "int8", "shape": [128, 42, 42, 1024]}, "output0": {"dtype": "int8", "shape": [8, 42, 42, 24, 16, 16]}})


// ---------------------------------------------------------------------------
// LOCAL: template_op_kernel0 -- input0:int8[128, 42, 42, 1024] -> output0:int8[8, 42, 42, 24, 16, 16]

#include <cuda_runtime.h>
#include <cuda_fp16.h>
#include <mma.h>

#ifndef __CUDA_COMMON_MACRO__
#define __CUDA_COMMON_MACRO__

#if (__CUDA_ARCH__ >= 600)
__forceinline__ __device__ __half hmax(const __half &a, const __half &b) { return a > b ? a : b; }
__forceinline__ __device__ __half hmin(const __half &a, const __half &b) { return a < b ? a : b; }
#endif

#endif


extern "C" __global__ __launch_bounds__(64) void template_op_kernel0(char* __restrict__ input0, char* __restrict__ output0) {
  // [thread_extent] blockIdx.x = 32
  // [thread_extent] threadIdx.x = 1
  // [thread_extent] blockIdx.y = 4
  // [thread_extent] threadIdx.y = 1
  // [thread_extent] blockIdx.z = 4
  // [thread_extent] threadIdx.z = 64
  for (int vthread_s = 0; vthread_s < 42; ++vthread_s) {
    ((output0[((((((((((int)blockIdx.y) * 21676032) + (vthread_s * 258048)) + ((((int)blockIdx.x) / 4) * 6144)) + (((int)blockIdx.z) * 4096)) + ((((int)threadIdx.z) / 16) * 256)) + ((((int)blockIdx.x) & 3) * 64)) + (((int)threadIdx.z) & 15)))]) = (input0[((((((((int)blockIdx.x) * 7225344) + (((int)blockIdx.y) * 86016)) + (vthread_s * 1024)) + (((int)blockIdx.z) * 256)) + ((int)threadIdx.z)))]));
    ((output0[((((((((((int)blockIdx.y) * 21676032) + (vthread_s * 258048)) + ((((((int)blockIdx.x) * 4) + 1) / 16) * 6144)) + (((int)blockIdx.z) * 4096)) + ((((int)threadIdx.z) / 16) * 256)) + ((((((int)blockIdx.x) * 4) + 1) & 15) * 16)) + (((int)threadIdx.z) & 15)))]) = (input0[(((((((((int)blockIdx.x) * 7225344) + (((int)blockIdx.y) * 86016)) + (vthread_s * 1024)) + (((int)blockIdx.z) * 256)) + ((int)threadIdx.z)) + 1806336))]));
    ((output0[((((((((((int)blockIdx.y) * 21676032) + (vthread_s * 258048)) + ((((((int)blockIdx.x) * 4) + 2) / 16) * 6144)) + (((int)blockIdx.z) * 4096)) + ((((int)threadIdx.z) / 16) * 256)) + ((((((int)blockIdx.x) * 4) + 2) & 15) * 16)) + (((int)threadIdx.z) & 15)))]) = (input0[(((((((((int)blockIdx.x) * 7225344) + (((int)blockIdx.y) * 86016)) + (vthread_s * 1024)) + (((int)blockIdx.z) * 256)) + ((int)threadIdx.z)) + 3612672))]));
    ((output0[((((((((((int)blockIdx.y) * 21676032) + (vthread_s * 258048)) + ((((((int)blockIdx.x) * 4) + 3) / 16) * 6144)) + (((int)blockIdx.z) * 4096)) + ((((int)threadIdx.z) / 16) * 256)) + ((((((int)blockIdx.x) * 4) + 3) & 15) * 16)) + (((int)threadIdx.z) & 15)))]) = (input0[(((((((((int)blockIdx.x) * 7225344) + (((int)blockIdx.y) * 86016)) + (vthread_s * 1024)) + (((int)blockIdx.z) * 256)) + ((int)threadIdx.z)) + 5419008))]));
    ((output0[(((((((((((int)blockIdx.y) * 21676032) + (vthread_s * 258048)) + ((((int)blockIdx.x) / 4) * 6144)) + (((int)blockIdx.z) * 4096)) + ((((int)threadIdx.z) / 16) * 256)) + ((((int)blockIdx.x) & 3) * 64)) + (((int)threadIdx.z) & 15)) + 1024))]) = (input0[(((((((((int)blockIdx.x) * 7225344) + (((int)blockIdx.y) * 86016)) + (vthread_s * 1024)) + (((int)blockIdx.z) * 256)) + ((int)threadIdx.z)) + 64))]));
    ((output0[(((((((((((int)blockIdx.y) * 21676032) + (vthread_s * 258048)) + ((((((int)blockIdx.x) * 4) + 1) / 16) * 6144)) + (((int)blockIdx.z) * 4096)) + ((((int)threadIdx.z) / 16) * 256)) + ((((((int)blockIdx.x) * 4) + 1) & 15) * 16)) + (((int)threadIdx.z) & 15)) + 1024))]) = (input0[(((((((((int)blockIdx.x) * 7225344) + (((int)blockIdx.y) * 86016)) + (vthread_s * 1024)) + (((int)blockIdx.z) * 256)) + ((int)threadIdx.z)) + 1806400))]));
    ((output0[(((((((((((int)blockIdx.y) * 21676032) + (vthread_s * 258048)) + ((((((int)blockIdx.x) * 4) + 2) / 16) * 6144)) + (((int)blockIdx.z) * 4096)) + ((((int)threadIdx.z) / 16) * 256)) + ((((((int)blockIdx.x) * 4) + 2) & 15) * 16)) + (((int)threadIdx.z) & 15)) + 1024))]) = (input0[(((((((((int)blockIdx.x) * 7225344) + (((int)blockIdx.y) * 86016)) + (vthread_s * 1024)) + (((int)blockIdx.z) * 256)) + ((int)threadIdx.z)) + 3612736))]));
    ((output0[(((((((((((int)blockIdx.y) * 21676032) + (vthread_s * 258048)) + ((((((int)blockIdx.x) * 4) + 3) / 16) * 6144)) + (((int)blockIdx.z) * 4096)) + ((((int)threadIdx.z) / 16) * 256)) + ((((((int)blockIdx.x) * 4) + 3) & 15) * 16)) + (((int)threadIdx.z) & 15)) + 1024))]) = (input0[(((((((((int)blockIdx.x) * 7225344) + (((int)blockIdx.y) * 86016)) + (vthread_s * 1024)) + (((int)blockIdx.z) * 256)) + ((int)threadIdx.z)) + 5419072))]));
    ((output0[(((((((((((int)blockIdx.y) * 21676032) + (vthread_s * 258048)) + ((((int)blockIdx.x) / 4) * 6144)) + (((int)blockIdx.z) * 4096)) + ((((int)threadIdx.z) / 16) * 256)) + ((((int)blockIdx.x) & 3) * 64)) + (((int)threadIdx.z) & 15)) + 2048))]) = (input0[(((((((((int)blockIdx.x) * 7225344) + (((int)blockIdx.y) * 86016)) + (vthread_s * 1024)) + (((int)blockIdx.z) * 256)) + ((int)threadIdx.z)) + 128))]));
    ((output0[(((((((((((int)blockIdx.y) * 21676032) + (vthread_s * 258048)) + ((((((int)blockIdx.x) * 4) + 1) / 16) * 6144)) + (((int)blockIdx.z) * 4096)) + ((((int)threadIdx.z) / 16) * 256)) + ((((((int)blockIdx.x) * 4) + 1) & 15) * 16)) + (((int)threadIdx.z) & 15)) + 2048))]) = (input0[(((((((((int)blockIdx.x) * 7225344) + (((int)blockIdx.y) * 86016)) + (vthread_s * 1024)) + (((int)blockIdx.z) * 256)) + ((int)threadIdx.z)) + 1806464))]));
    ((output0[(((((((((((int)blockIdx.y) * 21676032) + (vthread_s * 258048)) + ((((((int)blockIdx.x) * 4) + 2) / 16) * 6144)) + (((int)blockIdx.z) * 4096)) + ((((int)threadIdx.z) / 16) * 256)) + ((((((int)blockIdx.x) * 4) + 2) & 15) * 16)) + (((int)threadIdx.z) & 15)) + 2048))]) = (input0[(((((((((int)blockIdx.x) * 7225344) + (((int)blockIdx.y) * 86016)) + (vthread_s * 1024)) + (((int)blockIdx.z) * 256)) + ((int)threadIdx.z)) + 3612800))]));
    ((output0[(((((((((((int)blockIdx.y) * 21676032) + (vthread_s * 258048)) + ((((((int)blockIdx.x) * 4) + 3) / 16) * 6144)) + (((int)blockIdx.z) * 4096)) + ((((int)threadIdx.z) / 16) * 256)) + ((((((int)blockIdx.x) * 4) + 3) & 15) * 16)) + (((int)threadIdx.z) & 15)) + 2048))]) = (input0[(((((((((int)blockIdx.x) * 7225344) + (((int)blockIdx.y) * 86016)) + (vthread_s * 1024)) + (((int)blockIdx.z) * 256)) + ((int)threadIdx.z)) + 5419136))]));
    ((output0[(((((((((((int)blockIdx.y) * 21676032) + (vthread_s * 258048)) + ((((int)blockIdx.x) / 4) * 6144)) + (((int)blockIdx.z) * 4096)) + ((((int)threadIdx.z) / 16) * 256)) + ((((int)blockIdx.x) & 3) * 64)) + (((int)threadIdx.z) & 15)) + 3072))]) = (input0[(((((((((int)blockIdx.x) * 7225344) + (((int)blockIdx.y) * 86016)) + (vthread_s * 1024)) + (((int)blockIdx.z) * 256)) + ((int)threadIdx.z)) + 192))]));
    ((output0[(((((((((((int)blockIdx.y) * 21676032) + (vthread_s * 258048)) + ((((((int)blockIdx.x) * 4) + 1) / 16) * 6144)) + (((int)blockIdx.z) * 4096)) + ((((int)threadIdx.z) / 16) * 256)) + ((((((int)blockIdx.x) * 4) + 1) & 15) * 16)) + (((int)threadIdx.z) & 15)) + 3072))]) = (input0[(((((((((int)blockIdx.x) * 7225344) + (((int)blockIdx.y) * 86016)) + (vthread_s * 1024)) + (((int)blockIdx.z) * 256)) + ((int)threadIdx.z)) + 1806528))]));
    ((output0[(((((((((((int)blockIdx.y) * 21676032) + (vthread_s * 258048)) + ((((((int)blockIdx.x) * 4) + 2) / 16) * 6144)) + (((int)blockIdx.z) * 4096)) + ((((int)threadIdx.z) / 16) * 256)) + ((((((int)blockIdx.x) * 4) + 2) & 15) * 16)) + (((int)threadIdx.z) & 15)) + 3072))]) = (input0[(((((((((int)blockIdx.x) * 7225344) + (((int)blockIdx.y) * 86016)) + (vthread_s * 1024)) + (((int)blockIdx.z) * 256)) + ((int)threadIdx.z)) + 3612864))]));
    ((output0[(((((((((((int)blockIdx.y) * 21676032) + (vthread_s * 258048)) + ((((((int)blockIdx.x) * 4) + 3) / 16) * 6144)) + (((int)blockIdx.z) * 4096)) + ((((int)threadIdx.z) / 16) * 256)) + ((((((int)blockIdx.x) * 4) + 3) & 15) * 16)) + (((int)threadIdx.z) & 15)) + 3072))]) = (input0[(((((((((int)blockIdx.x) * 7225344) + (((int)blockIdx.y) * 86016)) + (vthread_s * 1024)) + (((int)blockIdx.z) * 256)) + ((int)threadIdx.z)) + 5419200))]));
    ((output0[(((((((((((int)blockIdx.y) * 21676032) + (vthread_s * 258048)) + ((((int)blockIdx.x) / 4) * 6144)) + (((int)blockIdx.z) * 4096)) + ((((int)threadIdx.z) / 16) * 256)) + ((((int)blockIdx.x) & 3) * 64)) + (((int)threadIdx.z) & 15)) + 10838016))]) = (input0[(((((((((int)blockIdx.x) * 7225344) + (((int)blockIdx.y) * 86016)) + (vthread_s * 1024)) + (((int)blockIdx.z) * 256)) + ((int)threadIdx.z)) + 43008))]));
    ((output0[(((((((((((int)blockIdx.y) * 21676032) + (vthread_s * 258048)) + ((((((int)blockIdx.x) * 4) + 1) / 16) * 6144)) + (((int)blockIdx.z) * 4096)) + ((((int)threadIdx.z) / 16) * 256)) + ((((((int)blockIdx.x) * 4) + 1) & 15) * 16)) + (((int)threadIdx.z) & 15)) + 10838016))]) = (input0[(((((((((int)blockIdx.x) * 7225344) + (((int)blockIdx.y) * 86016)) + (vthread_s * 1024)) + (((int)blockIdx.z) * 256)) + ((int)threadIdx.z)) + 1849344))]));
    ((output0[(((((((((((int)blockIdx.y) * 21676032) + (vthread_s * 258048)) + ((((((int)blockIdx.x) * 4) + 2) / 16) * 6144)) + (((int)blockIdx.z) * 4096)) + ((((int)threadIdx.z) / 16) * 256)) + ((((((int)blockIdx.x) * 4) + 2) & 15) * 16)) + (((int)threadIdx.z) & 15)) + 10838016))]) = (input0[(((((((((int)blockIdx.x) * 7225344) + (((int)blockIdx.y) * 86016)) + (vthread_s * 1024)) + (((int)blockIdx.z) * 256)) + ((int)threadIdx.z)) + 3655680))]));
    ((output0[(((((((((((int)blockIdx.y) * 21676032) + (vthread_s * 258048)) + ((((((int)blockIdx.x) * 4) + 3) / 16) * 6144)) + (((int)blockIdx.z) * 4096)) + ((((int)threadIdx.z) / 16) * 256)) + ((((((int)blockIdx.x) * 4) + 3) & 15) * 16)) + (((int)threadIdx.z) & 15)) + 10838016))]) = (input0[(((((((((int)blockIdx.x) * 7225344) + (((int)blockIdx.y) * 86016)) + (vthread_s * 1024)) + (((int)blockIdx.z) * 256)) + ((int)threadIdx.z)) + 5462016))]));
    ((output0[(((((((((((int)blockIdx.y) * 21676032) + (vthread_s * 258048)) + ((((int)blockIdx.x) / 4) * 6144)) + (((int)blockIdx.z) * 4096)) + ((((int)threadIdx.z) / 16) * 256)) + ((((int)blockIdx.x) & 3) * 64)) + (((int)threadIdx.z) & 15)) + 10839040))]) = (input0[(((((((((int)blockIdx.x) * 7225344) + (((int)blockIdx.y) * 86016)) + (vthread_s * 1024)) + (((int)blockIdx.z) * 256)) + ((int)threadIdx.z)) + 43072))]));
    ((output0[(((((((((((int)blockIdx.y) * 21676032) + (vthread_s * 258048)) + ((((((int)blockIdx.x) * 4) + 1) / 16) * 6144)) + (((int)blockIdx.z) * 4096)) + ((((int)threadIdx.z) / 16) * 256)) + ((((((int)blockIdx.x) * 4) + 1) & 15) * 16)) + (((int)threadIdx.z) & 15)) + 10839040))]) = (input0[(((((((((int)blockIdx.x) * 7225344) + (((int)blockIdx.y) * 86016)) + (vthread_s * 1024)) + (((int)blockIdx.z) * 256)) + ((int)threadIdx.z)) + 1849408))]));
    ((output0[(((((((((((int)blockIdx.y) * 21676032) + (vthread_s * 258048)) + ((((((int)blockIdx.x) * 4) + 2) / 16) * 6144)) + (((int)blockIdx.z) * 4096)) + ((((int)threadIdx.z) / 16) * 256)) + ((((((int)blockIdx.x) * 4) + 2) & 15) * 16)) + (((int)threadIdx.z) & 15)) + 10839040))]) = (input0[(((((((((int)blockIdx.x) * 7225344) + (((int)blockIdx.y) * 86016)) + (vthread_s * 1024)) + (((int)blockIdx.z) * 256)) + ((int)threadIdx.z)) + 3655744))]));
    ((output0[(((((((((((int)blockIdx.y) * 21676032) + (vthread_s * 258048)) + ((((((int)blockIdx.x) * 4) + 3) / 16) * 6144)) + (((int)blockIdx.z) * 4096)) + ((((int)threadIdx.z) / 16) * 256)) + ((((((int)blockIdx.x) * 4) + 3) & 15) * 16)) + (((int)threadIdx.z) & 15)) + 10839040))]) = (input0[(((((((((int)blockIdx.x) * 7225344) + (((int)blockIdx.y) * 86016)) + (vthread_s * 1024)) + (((int)blockIdx.z) * 256)) + ((int)threadIdx.z)) + 5462080))]));
    ((output0[(((((((((((int)blockIdx.y) * 21676032) + (vthread_s * 258048)) + ((((int)blockIdx.x) / 4) * 6144)) + (((int)blockIdx.z) * 4096)) + ((((int)threadIdx.z) / 16) * 256)) + ((((int)blockIdx.x) & 3) * 64)) + (((int)threadIdx.z) & 15)) + 10840064))]) = (input0[(((((((((int)blockIdx.x) * 7225344) + (((int)blockIdx.y) * 86016)) + (vthread_s * 1024)) + (((int)blockIdx.z) * 256)) + ((int)threadIdx.z)) + 43136))]));
    ((output0[(((((((((((int)blockIdx.y) * 21676032) + (vthread_s * 258048)) + ((((((int)blockIdx.x) * 4) + 1) / 16) * 6144)) + (((int)blockIdx.z) * 4096)) + ((((int)threadIdx.z) / 16) * 256)) + ((((((int)blockIdx.x) * 4) + 1) & 15) * 16)) + (((int)threadIdx.z) & 15)) + 10840064))]) = (input0[(((((((((int)blockIdx.x) * 7225344) + (((int)blockIdx.y) * 86016)) + (vthread_s * 1024)) + (((int)blockIdx.z) * 256)) + ((int)threadIdx.z)) + 1849472))]));
    ((output0[(((((((((((int)blockIdx.y) * 21676032) + (vthread_s * 258048)) + ((((((int)blockIdx.x) * 4) + 2) / 16) * 6144)) + (((int)blockIdx.z) * 4096)) + ((((int)threadIdx.z) / 16) * 256)) + ((((((int)blockIdx.x) * 4) + 2) & 15) * 16)) + (((int)threadIdx.z) & 15)) + 10840064))]) = (input0[(((((((((int)blockIdx.x) * 7225344) + (((int)blockIdx.y) * 86016)) + (vthread_s * 1024)) + (((int)blockIdx.z) * 256)) + ((int)threadIdx.z)) + 3655808))]));
    ((output0[(((((((((((int)blockIdx.y) * 21676032) + (vthread_s * 258048)) + ((((((int)blockIdx.x) * 4) + 3) / 16) * 6144)) + (((int)blockIdx.z) * 4096)) + ((((int)threadIdx.z) / 16) * 256)) + ((((((int)blockIdx.x) * 4) + 3) & 15) * 16)) + (((int)threadIdx.z) & 15)) + 10840064))]) = (input0[(((((((((int)blockIdx.x) * 7225344) + (((int)blockIdx.y) * 86016)) + (vthread_s * 1024)) + (((int)blockIdx.z) * 256)) + ((int)threadIdx.z)) + 5462144))]));
    ((output0[(((((((((((int)blockIdx.y) * 21676032) + (vthread_s * 258048)) + ((((int)blockIdx.x) / 4) * 6144)) + (((int)blockIdx.z) * 4096)) + ((((int)threadIdx.z) / 16) * 256)) + ((((int)blockIdx.x) & 3) * 64)) + (((int)threadIdx.z) & 15)) + 10841088))]) = (input0[(((((((((int)blockIdx.x) * 7225344) + (((int)blockIdx.y) * 86016)) + (vthread_s * 1024)) + (((int)blockIdx.z) * 256)) + ((int)threadIdx.z)) + 43200))]));
    ((output0[(((((((((((int)blockIdx.y) * 21676032) + (vthread_s * 258048)) + ((((((int)blockIdx.x) * 4) + 1) / 16) * 6144)) + (((int)blockIdx.z) * 4096)) + ((((int)threadIdx.z) / 16) * 256)) + ((((((int)blockIdx.x) * 4) + 1) & 15) * 16)) + (((int)threadIdx.z) & 15)) + 10841088))]) = (input0[(((((((((int)blockIdx.x) * 7225344) + (((int)blockIdx.y) * 86016)) + (vthread_s * 1024)) + (((int)blockIdx.z) * 256)) + ((int)threadIdx.z)) + 1849536))]));
    ((output0[(((((((((((int)blockIdx.y) * 21676032) + (vthread_s * 258048)) + ((((((int)blockIdx.x) * 4) + 2) / 16) * 6144)) + (((int)blockIdx.z) * 4096)) + ((((int)threadIdx.z) / 16) * 256)) + ((((((int)blockIdx.x) * 4) + 2) & 15) * 16)) + (((int)threadIdx.z) & 15)) + 10841088))]) = (input0[(((((((((int)blockIdx.x) * 7225344) + (((int)blockIdx.y) * 86016)) + (vthread_s * 1024)) + (((int)blockIdx.z) * 256)) + ((int)threadIdx.z)) + 3655872))]));
    ((output0[(((((((((((int)blockIdx.y) * 21676032) + (vthread_s * 258048)) + ((((((int)blockIdx.x) * 4) + 3) / 16) * 6144)) + (((int)blockIdx.z) * 4096)) + ((((int)threadIdx.z) / 16) * 256)) + ((((((int)blockIdx.x) * 4) + 3) & 15) * 16)) + (((int)threadIdx.z) & 15)) + 10841088))]) = (input0[(((((((((int)blockIdx.x) * 7225344) + (((int)blockIdx.y) * 86016)) + (vthread_s * 1024)) + (((int)blockIdx.z) * 256)) + ((int)threadIdx.z)) + 5462208))]));
  }
}

// Saved Perf = 8.227730e-05 sec / run; Step Produced = 165; Planned Steps = 1000;
// Antares Tuning Completed in 1000 steps.